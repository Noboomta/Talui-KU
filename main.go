package main

import (
	_ "log"
	"os"
	"talui/pkg/app"
	"talui/pkg/database"
	"talui/pkg/route"
	
	"github.com/gofiber/fiber/v2/middleware/cors"

	_ "github.com/go-sql-driver/mysql"
	_ "github.com/joho/godotenv"
	
	swagger "github.com/arsmn/fiber-swagger/v2"
	
	// docs are generated by Swag CLI, you have to import them.
	// replace with your own docs folder, usually "github.com/username/reponame/docs"
	_ "talui/docs"
)

// @title Talui Api docs
// @version 1.0
// @description This is a sample swagger for Fiber
// @termsOfService http://swagger.io/terms/
// @contact.name puvana swatavnith
// @contact.email puvana.s@ku.th
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host talui-ku-server.herokuapp.com/
// @BasePath /
func main() {
	fiberApp := app.CreateFiberApp()
	
	// err := godotenv.Load()
    // if err != nil {
    //     log.Fatal("Error loading .env file")
    // }
	fiberApp.Use(cors.New())
	fiberApp.Use(cors.New(cors.Config{
	    AllowOrigins:     "*",
	    AllowMethods:     "GET,POST,HEAD,PUT,DELETE,PATCH",
	    AllowHeaders:     "",
	}))
	
	fiberApp.Get("/swagger/*", swagger.Handler) // default
	
	fiberApp.Get("/swagger/*", swagger.New(swagger.Config{ // custom
		URL:         "/swagger/doc.json",
		DeepLinking: false,
	}))
    
    mysqlUri := os.Getenv("MYSQL_URI")
	database.ConnectMySQL(mysqlUri)
	// middleware.RegisDb(fiberApp, db)
	route.SetupRouter(fiberApp)
	
	// port 
	port := os.Getenv("PORT")
	fiberApp.Listen(":" + port)
}